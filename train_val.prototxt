name: "CaffeNet"
layer {
  name: "data1"
  type: "Data"
  top: "data1"
  top: "label1"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
  }
  data_param {
    source: "/home/n9346490/updatedlatest/CUHK01halfData/XX_train_lmdb_pos1"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data2"
  type: "Data"
  top: "data2"
  top: "label2"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
  }
  data_param {
    source: "/home/n9346490/updatedlatest/CUHK01halfData/XX_train_lmdb_pos2"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data3"
  type: "Data"
  top: "data3"
  top: "label3"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
  }
  data_param {
    source: "/home/n9346490/updatedlatest/CUHK01halfData/XX_train_lmdb_neg1"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data4"
  type: "Data"
  top: "data4"
  top: "label4"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
  }
  data_param {
    source: "/home/n9346490/updatedlatest/CUHK01halfData/XX_train_lmdb_neg2"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data1"
  type: "Data"
  top: "data1"
  top: "label1"
  include {
    phase: TEST
  }
  transform_param {
  }
  data_param {
    source: "/home/n9346490/updatedlatest/CUHK01halfData/XX_valrank_lmdb_pos"
    #set batch_size to 59 if iLIDS
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "data2"
  type: "Data"
  top: "data2"
  top: "label2"
  include {
    phase: TEST
  }
  transform_param {
  }
  data_param {
    source: "/home/n9346490/updatedlatest/CUHK01halfData/XX_valrank_lmdb_neg"
    #set batch_size to 59 if iLIDS
    batch_size: 100
    backend: LMDB
  }
}
##############conv12-stream1#################
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data1"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "norm2"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "normfeat"
  type: "Normalize"
  bottom: "feat"
  top: "normfeat"
  include {
    phase: TRAIN
  }
}
##############conv12-stream2#################
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data2"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "conv1_p"
  top: "conv1_p"
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_p"
  type: "LRN"
  bottom: "pool1_p"
  top: "norm1_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "norm1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_p"
  type: "ReLU"
  bottom: "conv2_p"
  top: "conv2_p"
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_p"
  type: "LRN"
  bottom: "pool2_p"
  top: "norm2_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "feat_p"
  type: "InnerProduct"
  bottom: "norm2_p"
  top: "feat_p"
  param {
    name: "feat_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "normfeat_p"
  type: "Normalize"
  bottom: "feat_p"
  top: "normfeat_p"
  include {
    phase: TRAIN
  }
}
##############conv12-stream3#################
layer {
  name: "conv1_n"
  type: "Convolution"
  bottom: "data3"
  top: "conv1_n"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "relu1_n"
  type: "ReLU"
  bottom: "conv1_n"
  top: "conv1_n"
  include {
    phase: TRAIN
  }
}
layer {
  name: "pool1_n"
  type: "Pooling"
  bottom: "conv1_n"
  top: "pool1_n"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "norm1_n"
  type: "LRN"
  bottom: "pool1_n"
  top: "norm1_n"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "conv2_n"
  type: "Convolution"
  bottom: "norm1_n"
  top: "conv2_n"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "relu2_n"
  type: "ReLU"
  bottom: "conv2_n"
  top: "conv2_n"
  include {
    phase: TRAIN
  }
}
layer {
  name: "pool2_n"
  type: "Pooling"
  bottom: "conv2_n"
  top: "pool2_n"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "norm2_n"
  type: "LRN"
  bottom: "pool2_n"
  top: "norm2_n"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "feat_n"
  type: "InnerProduct"
  bottom: "norm2_n"
  top: "feat_n"
  param {
    name: "feat_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "normfeat_n"
  type: "Normalize"
  bottom: "feat_n"
  top: "normfeat_n"
  include {
    phase: TRAIN
  }
}
##############conv12-stream4#################
layer {
  name: "conv1_q"
  type: "Convolution"
  bottom: "data4"
  top: "conv1_q"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "relu1_q"
  type: "ReLU"
  bottom: "conv1_q"
  top: "conv1_q"
  include {
    phase: TRAIN
  }
}
layer {
  name: "pool1_q"
  type: "Pooling"
  bottom: "conv1_q"
  top: "pool1_q"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "norm1_q"
  type: "LRN"
  bottom: "pool1_q"
  top: "norm1_q"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "conv2_q"
  type: "Convolution"
  bottom: "norm1_q"
  top: "conv2_q"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "relu2_q"
  type: "ReLU"
  bottom: "conv2_q"
  top: "conv2_q"
  include {
    phase: TRAIN
  }
}
layer {
  name: "pool2_q"
  type: "Pooling"
  bottom: "conv2_q"
  top: "pool2_q"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "norm2_q"
  type: "LRN"
  bottom: "pool2_q"
  top: "norm2_q"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "feat_q"
  type: "InnerProduct"
  bottom: "norm2_q"
  top: "feat_q"
  param {
    name: "feat_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "normfeat_q"
  type: "Normalize"
  bottom: "feat_q"
  top: "normfeat_q"
  include {
    phase: TRAIN
  }
}
##############tripletloss#################
layer {
  name: "quartetloss"
  type: "QuartetLoss"
  bottom: "normfeat"
  bottom: "normfeat_p"
  bottom: "normfeat_n"
  bottom: "normfeat_q"
  top: "quartetloss"
  quartet_loss_param {
    margin: 1.0
  }
  include {
    phase: TRAIN
  }
  loss_weight: 1
}
##############processing_forclassification#################
layer {
  name: "concat12"
  type: "Concat"
  bottom: "norm2"
  bottom: "norm2_p"
  top: "concat12"
  concat_param {
    concat_dim: 1
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "concat13"
  type: "Concat"
  bottom: "norm2"
  bottom: "norm2_n"
  top: "concat13"
  concat_param {
    concat_dim: 1
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "concat14"
  type: "Concat"
  bottom: "norm2_n"
  bottom: "norm2_q"
  top: "concat14"
  concat_param {
    concat_dim: 1
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "concat12"
  bottom: "concat13"
  bottom: "concat14"
  top: "concat"
  concat_param {
    concat_dim: 0
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "concatlb"
  type: "Concat"
  bottom: "label2"
  bottom: "label3"
  bottom: "label4"
  top: "concatlb"
  concat_param {
    concat_dim: 0
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "norm2"
  bottom: "norm2_p"
  top: "concat"
  concat_param {
    concat_dim: 1
  }
  include {
    phase: TEST
  }
}
##############conv3-5_fc6-8#################
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "concat"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
##############classificationloss#################
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "concatlb"
  top: "loss"
  include {
    phase: TRAIN
  }
  loss_weight: 1
}
layer {
  name: "biclass_acc"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "concatlb"
  top: "biclass_acc"
  include {
    phase: TRAIN
  }
}
##############rank_testing#################
layer {
  name: "sfmax_fc8"
  type: "Softmax"
  bottom: "fc8"
  top: "sfmax_fc8"
  include: { phase: TEST }
}
layer {
  name: "slice_sim"
  type: "Slice"
  bottom: "sfmax_fc8"
  top: "fc8_unsim"
  top: "fc8_sim"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
  include: { phase: TEST }
}
layer {
  name: "reshape_avg"
  type: "Reshape"
  bottom: "fc8_sim"
  top: "reshape_avg"
  reshape_param {
    shape {
      dim: 1
      dim: -1
      dim: 1
      dim: 1
    }
  }
  include: { phase: TEST }
}
layer {
  name:"argmax_avg"
  type: "ArgMax"
  bottom: "reshape_avg"
  top: "argmax_avg"
  argmax_param {
    top_k: 1
  }
  include: { phase: TEST }
}
layer {
  name: "reshape_label"
  type: "Reshape"
  bottom: "label1"
  top: "reshape_label"
  reshape_param {
    shape {
      dim: 1
      dim: -1
      dim: 1
      dim: 1
    }
  }
  include: { phase: TEST }
}
layer {
  name:"rank_acc"
  type: "Accuracy"
  bottom: "reshape_label"
  bottom: "argmax_avg"
  top: "rank_acc"
  accuracy_param {
    top_k: 1
  }
  include: { phase: TEST }
}
#############useless_parameters###########
layer {
  name: "silence"
  type: "Silence"
  bottom: "label1"
  include: { phase: TRAIN }
}
layer {
  name: "silence"
  type: "Silence"
  bottom: "fc8_unsim"
  include: { phase: TEST }
}

